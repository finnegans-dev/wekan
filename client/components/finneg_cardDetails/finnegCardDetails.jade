template(name="finnegCardDetails")
  .containerFinnegCardDetails
    .left
      .card-details-items
        //- .card-details-item.card-details-item-name
        //-   h3.card-details-item-title {{_ 'assigned-by'}}
        //-   if getRequestedBy
        //-     +viewer
        //-       = getRequestedBy

        .card-details-item.left-item
          .item-section
            i.fa.fa-user
            h4.title.card-details-item-title {{_ 'assigned-to'}}
          if getAssignedTo
            .viewer
              p {{ getAssignedTo }}
                if canModifyCard
                  i.fa.fa-times.js-remove-assigned(style="padding-left: 10px;cursor:pointer;")
          else if canModifyCard
            a.plus.card-details-item-add-button.js-add-assigned(title="{{_ 'card-assigned-title'}}")
              i.fa.fa-plus
          //-each getMembers
              +userAvatar(userId=this cardId=../_id)
              | {{! XXX Hack to hide syntaxic coloration /// }}

        .card-details-item.left-item
          .item-section
            i.fa.fa-tag
            h4.title.card-details-item-title {{_ 'labels'}}
          a(class="{{#if canModifyCardAssigned}}js-add-labels{{else}}is-disabled{{/if}}" title="{{_ 'card-labels-title'}}")
            each labels
              span.card-label(class="card-label-{{color}}" title=name)= name
          if canModifyCardAssigned
            a.plus.js-add-labels(title="{{_ 'card-labels-title'}}")
              i.fa.fa-plus

        .card-details-item.left-item
          .item-section
            i.fa.fa-calendar-alt
            h4.title.card-details-item-title {{_ 'card-due'}}
          if getDue
            +cardDueDate
          else
            if canModifyCard
              a.plus.js-due-date
                i.fa.fa-pencil-alt

        //- +selectors(cardListId=cardListId.get)
        .card-details-item.left-item
          .item-section
            i.fa.fa-bug
            h4.title.card-details-item-title Tema
              div.at-form-lang
                select#select-swimlane.select-lang.js-userform-set-language
                  each swimlanes.get
                    if matchSwimlane
                      option(value="{{ _id }}" selected) {{ title }}
                    else
                      option(value="{{ _id }}") {{ title }}

        .card-details-item.left-item
          .item-section
            i.fa.fa-bug
            h4.title.card-details-item-title Fase
              div.at-form-lang
                select#select-list.select-lang.js-userform-set-language
                  each lists.get
                    if matchList
                      option(value="{{ _id }}" selected) {{ title }}
                    else
                      option(value="{{ _id }}") {{ title }}
    .right
      section.card-details.js-card-details.js-perfect-scrollbar: .card-details-canvas
        .card-details-header
          +inlinedForm(classNames="js-card-details-title")
            +finnegEditCardTitleForm
          else
            if isNotTaskList
              a.fa.fa-times-thin.card-details-menu.js-close-card-details

            if canModifyCard
              if isPublic
                a.fa.fa-globe.card-details-menu.card-permission(title="Pública")
              else
                a.fa.fa-lock.card-details-menu.card-permission(title="Privada")

              //-a.fa.fa-navicon.card-details-menu.js-open-card-details-menu

              if isNotCreateTask
                a.fa.fa-archive.card-details-menu.js-archive-card(title="Archivar")

            if isNotCreateTask
              if canModifyCardAssigned
                a.fa.fa-check.card-details-menu.js-card-finished(title="{{#if isFinished}}Finalizada{{else}}Finalizar{{/if}}" style="{{#if isFinished}}color:green;{{/if}}")

            h2.card-details-title.js-card-title(
              class="{{#if canModifyCard}}js-open-inlined-form is-editable{{/if}}")
                +viewer
                  = getTitle
                  if isWatching
                    i.fa.fa-eye.card-details-watch
            .card-details-path
              each parentList
                | &nbsp; &gt; &nbsp;
                a.js-parent-card(href=linkForCard) {{title}}
              //-else
                {{_ 'top-level-card'}}
            if isLinkedCard
              h3.linked-card-location
                +viewer
                  | {{getBoardTitle}} > {{getTitle}}
          hr

        //- if getArchived
        //-   if isLinkedBoard
        //-     p.warning {{_ 'board-archived'}}
        //-   else
        //-     p.warning {{_ 'card-archived'}}

        //- .card-details-items
        //-   .card-details-item.card-details-item-received
        //-     h3.card-details-item-title {{_ 'card-received'}}
        //-     if getReceived
        //-       +cardReceivedDate
        //-     else
        //-       if canModifyCard
        //-         a.js-received-date {{_ 'add'}}

          //- .card-details-item.card-details-item-start
          //-   h3.card-details-item-title {{_ 'card-start'}}
          //-   if getStart
          //-     +cardStartDate
          //-   else
          //-     if canModifyCardAssigned
          //-       a.js-start-date {{_ 'add'}}

          //- .card-details-item.card-details-item-end
          //-   h3.card-details-item-title {{_ 'card-end'}}
          //-   if getEnd
          //-     +cardEndDate
          //-   else
          //-     if canModifyCard
          //-       a.js-end-date {{_ 'add'}}

        //- .card-details-items
        //-   .card-details-item.card-details-item-members
        //-     if isPublic
        //-       h3.card-details-item-title Público
        //-     else
        //-       h3.card-details-item-title   unless currentUser.isNoComments
              if isLoaded.get
                if isLinkedCard
                  +activities(card=this mode="linkedcard")
                else if isLinkedBoard
                  +activities(card=this mode="linkedboard")
                else
                  +activities(card=this mode="card")yntaxic coloration /// }}
        //-       if canModifyCardAssigned
        //-         a.member.add-member.card-details-item-add-button.js-add-members(title="{{_ 'card-members-title'}}")
        //-           i.fa.fa-plus

        //- .card-details-items
        //-   each customFieldsWD
        //-     .card-details-item.card-details-item-customfield
        //-       h3.card-details-item-title
        //-         = definition.name
        //-       +cardCustomField

        //- .card-details-items
        //-   if getSpentTime
        //-     .card-details-item.card-details-item-spent
        //-       if getIsOvertime
        //-         h3.card-details-item-title {{_ 'overtime-hours'}}
        //-       else
        //-         h3.card-details-item-title {{_ 'spent-time-hours'}}
        //-       +cardSpentTime

        //- XXX We should use "editable" to avoid repetiting ourselves
        //- if canModifyCard
        //- h3.card-details-item-title {{_ 'description'}}
        //- +finnegInlinedCardDescription(classNames="card-description js-card-description")
        .description
          +editor(class="js-description-input" isDescription="true")
            | {{#unless editDescription.get}}{{getUnsavedValue 'cardDescription' _id getDescription}}{{else}}{{getUnsavedValue 'cardDescription' _id newDescription.get}}{{/unless}}
          if editDescription.get
            .edit-controls.clearfix
              button.base.js-close-inlined-form {{_ 'cancel'}}
              button.primary.js-card-description {{_ 'save'}}

          //- else
          //-   a.js-open-inlined-form
          //-     if getDescription
          //-       +viewer
          //-         = getDescription
          //-     else
          //-       | {{_ 'edit'}}
          //-   if (hasUnsavedValue 'cardDescription' _id)
          //-     p.quiet
          //-       | {{_ 'unsaved-description'}}
          //-       a.js-open-inlined-form {{_ 'view-it'}}
          //-       = ' - '
          //-       a.js-close-inlined-form {{_ 'discard'}}
        //- else if getDescription
        //-   h3.card-details-item-title {{_ 'description'}}
        //-   +viewer
        //-     = getDescription




        //- hr
        //- +checklists(cardId = _id)

        //-if currentBoard.allowsSubtasks
          hr
          +subtasks(cardId = _id)

        //- hr
        //- h3
        //-   i.fa.fa-paperclip
        //-   | {{_ 'attachments'}}

        +attachmentsGalery
        hr
        //- unless currentUser.isNoComments
        //-   if currentUser.isBoardMember
        //-     .material-toggle-switch
        //-       span.toggle-switch-title {{_ 'hide-system-messages'}}
        //-       if hiddenSystemMessages
        //-         input.toggle-switch(type="checkbox" id="toggleButton" checked="checked")
        //-       else
        //-         input.toggle-switch(type="checkbox" id="toggleButton")
        //-       label.toggle-label(for="toggleButton")

        unless currentUser.isNoComments
          .activity-title
            //- h3 {{ _ 'activity'}}
            //- if currentUser.isBoardMember
            //-   .material-toggle-switch
            //-     span.toggle-switch-title {{_ 'hide-system-messages'}}
            //-     if hiddenSystemMessages
            //-       input.toggle-switch(type="checkbox" id="toggleButton" checked="checked")
            //-     else
            //-       input.toggle-switch(type="checkbox" id="toggleButton")
            //-     label.toggle-label(for="toggleButton")
        if isTaskList.get
          .add-controls
            button#button-save-card.primary.confirm.clear.js-save-card {{_ 'Guardar' }}
        else
          if currentUser.isBoardMember
            unless currentUser.isNoComments
              +commentForm
          unless currentUser.isNoComments
            if isLoaded.get
              if isLinkedCard
                +activities(card=this mode="linkedcard")
              else if isLinkedBoard
                +activities(card=this mode="linkedboard")
              else
                +activities(card=this mode="card")



//- template(name="selectors")
//-   .card-details-item.left-item
//-           .item-section
//-             i.fa.fa-bug
//-             h4.title.card-details-item-title Tema
//-               div.at-form-lang
//-                 select.select-lang.js-userform-set-language
//-                   each swimlanes.get
//-                     option(value="{{ _id }}" selected="{{_ isSelected }}") {{ title }}

//-   .card-details-item.left-item
//-     .item-section
//-       i.fa.fa-bug
//-       h4.title.card-details-item-title Fase
//-         div.at-form-lang
//-           select.select-lang.js-userform-set-language
//-             each lists.get
//-               if (_id)
//-               option(value="{{ _id }}" selected="{{ matchList }}") {{ title }}
//-               else
//-                 option(value="{{ _id }}") {{ title }}

template(name="finnegEditCardTitleForm")
  textarea.js-edit-card-title(rows='1' autofocus)
    = getTitle
  .edit-controls.clearfix

template(name="finnegEditCardRequesterForm")
  input.js-edit-card-requester(type='text' autofocus value=getRequestedBy)
  .edit-controls.clearfix
    button.primary.confirm.js-submit-edit-card-requester-form(type="submit") {{_ 'save'}}
    a.fa.fa-times-thin.js-close-inlined-form

template(name="finnegEditCardAssignerForm")
  input.js-edit-card-assigner(type='text' autofocus value=getAssignedBy)
  .edit-controls.clearfix
    button.primary.confirm.js-submit-edit-card-assigner-form(type="submit") {{_ 'save'}}
    a.fa.fa-times-thin.js-close-inlined-form

template(name="finnegCardDetailsActionsPopup")
  ul.pop-over-list
    //- li: a.js-toggle-watch-card {{#if isWatching}}{{_ 'unwatch'}}{{else}}{{_ 'watch'}}{{/if}}
  if canModifyCard
    hr
    ul.pop-over-list
      li: a.js-members {{_ 'card-edit-members'}}
      li: a.js-labels {{_ 'card-edit-labels'}}
      li: a.js-attachments {{_ 'card-edit-attachments'}}
      li: a.js-custom-fields {{_ 'card-edit-custom-fields'}}
      li: a.js-received-date {{_ 'editCardReceivedDatePopup-title'}}
      li: a.js-start-date {{_ 'editCardStartDatePopup-title'}}
      li: a.js-due-date {{_ 'editCardDueDatePopup-title'}}
      li: a.js-end-date {{_ 'editCardEndDatePopup-title'}}
      li: a.js-spent-time {{_ 'editCardSpentTimePopup-title'}}
    hr
    ul.pop-over-list
      li: a.js-move-card-to-top {{_ 'moveCardToTop-title'}}
      li: a.js-move-card-to-bottom {{_ 'moveCardToBottom-title'}}
    hr
    ul.pop-over-list
      li: a.js-move-card {{_ 'moveCardPopup-title'}}
      li: a.js-copy-card {{_ 'copyCardPopup-title'}}
      li: a.js-copy-checklist-cards {{_ 'copyChecklistToManyCardsPopup-title'}}
      unless archived
        li: a.js-archive {{_ 'archive-card'}}
      li: a.js-more {{_ 'cardMorePopup-title'}}

template(name="finnegMoveCardPopup")
  +boardsAndLists

template(name="finnegCopyCardPopup")
  label(for='copy-card-title') {{_ 'title'}}:
  textarea#copy-card-title.minicard-composer-textarea.js-card-title(autofocus)
    = getTitle
  +boardsAndLists

template(name="finnegCopyChecklistToManyCardsPopup")
  label(for='copy-checklist-cards-title') {{_ 'copyChecklistToManyCardsPopup-instructions'}}:
  textarea#copy-card-title.minicard-composer-textarea.js-card-title(autofocus)
    | {{_ 'copyChecklistToManyCardsPopup-format'}}
  +boardsAndLists

template(name="finnegBoardsAndLists")
  label {{_ 'boards'}}:
  select.js-select-boards
    each boards
      if $eq _id currentBoard._id
        option(value="{{_id}}" selected) {{_ 'current'}}
      else
        option(value="{{_id}}") {{title}}

  label {{_ 'swimlanes'}}:
  select.js-select-swimlanes
    each swimlanes
      option(value="{{_id}}") {{title}}

  label {{_ 'lists'}}:
  select.js-select-lists
    each aBoardLists
      option(value="{{_id}}") {{title}}

  .edit-controls.clearfix
    button.primary.confirm.js-done {{_ 'done'}}

template(name="finnegCardMembersPopup")
  ul.pop-over-list.js-card-member-list
    each board.activeMembers
      li.item(class="{{#if isCardMember}}active{{/if}}")
        a.name.js-select-member(href="#")
          +userAvatar(userId=user._id)
          span.full-name
            = user.profile.fullname
            | (<span class="username">{{ user.username }}</span>)
          if isCardMember
            i.fa.fa-check

template(name="finnegCardAssignedPopup")
  .js-search-member
      +esInput(index="users")

    if loading.get
      +spinner
    else if error.get
      .warning {{_ error.get}}
    else
      ul.pop-over-list
        +esEach(index="users")
          if isBoardMember
            li.item.js-member-item
              a.name.js-select-member(title="{{profile.fullname}} ({{username}})")
                +userAvatar(userId=_id esSearch=true)
                span.full-name
                  = profile.fullname
                  | (<span class="username">{{username}}</span>)

        +ifEsIsSearching(index='users')
          +spinner

        +ifEsHasNoResults(index="users")
          .manage-member-section
            p.quiet {{_ 'no-results'}}
  //-ul.pop-over-list.js-card-member-list
    each board.activeMembers
      li.item(class="{{#if isAssigned}}active{{/if}}")
        a.name.js-select-member(href="#")
          +userAvatar(userId=user._id)
          span.full-name
            = user.profile.fullname
            | (<span class="username">{{ user.username }}</span>)
          if isAssigned
            i.fa.fa-check

template(name="finnegCardMorePopup")
  p.quiet
    span.clearfix
      span {{_ 'link-card'}}
      = ' '
      i.fa.colorful(class="{{#if board.isPublic}}fa-globe{{else}}fa-lock{{/if}}")
      input.inline-input(type="text" id="cardURL" readonly value="{{ absoluteUrl }}")
      button.js-copy-card-link-to-clipboard(class="btn") {{_ 'copy-card-link-to-clipboard'}}
    span.clearfix
    br
    h2 {{_ 'change-card-parent'}}
    label {{_ 'source-board'}}:
      select.js-field-parent-board
        each boards
          if isParentBoard
            option(value="{{_id}}" selected) {{title}}
          else
            option(value="{{_id}}") {{title}}
        if isTopLevel
          option(value="none" selected) {{_ 'custom-field-dropdown-none'}}
        else
          option(value="none") {{_ 'custom-field-dropdown-none'}}

    label {{_ 'parent-card'}}:
      select.js-field-parent-card
        if isTopLevel
          option(value="none" selected) {{_ 'custom-field-dropdown-none'}}
        else
          each cards
            if isParentCard
              option(value="{{_id}}" selected) {{title}}
            else
              option(value="{{_id}}") {{title}}
          option(value="none") {{_ 'custom-field-dropdown-none'}}
    br
    | {{_ 'added'}}
    span.date(title=card.createdAt) {{ moment createdAt 'LLL' }}
    a.js-delete(title="{{_ 'card-delete-notice'}}") {{_ 'delete'}}



template(name="cardDeletePopup")
  p {{_ "card-delete-pop"}}
  unless archived
   p {{_ "card-delete-suggest-archive"}}
  button.js-confirm.negate.full(type="submit") {{_ 'delete'}}


template(name="cardArchivedPopup")
  p ¿Estas seguro que deseas archivar la tarjeta?
  button.js-confirm.negate.full(type="submit") Archivar

template(name="cardFinishedPopup")
  p ¿Estas seguro que deseas finalizar la tarjeta?
  button.js-confirm.negate.full(type="submit") Finalizar
